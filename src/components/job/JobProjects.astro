---
import type { Project } from "../../models/JobModels";

interface Props {
  projects: Project[];
}
const { projects } = Astro.props;
---

<div class="mb-4">
  <h6 class="mb-2 font-semibold text-sky-600">Colaboraci√≥n en proyectos:</h6>
  <ul class="pl-3 sm:grid sm:grid-cols-2 sm:gap-3">
    {
      projects.map((project) => (
        <li class="project grid grid-rows-1 items-center gap-4 h-36 my-3 p-3 shadow shadow-gray-400 rounded cursor-pointer motion-safe:animate-pulse md:my-0">
          <p class="project__name font-bold text-center">{project.name}</p>
          <ul class="project__responsabilities pl-8 list-disc text-sm hidden">
            {project.responsabilities.map((responsability) => (
              <li>{responsability}</li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</div>

<style>
  [data-flip="invert"] {
    transform: translate(var(--dx), var(--dy)) scale(var(--dw), var(--dh));
  }

  [data-flip="play"] {
    transform: none;
    transition: transform 0.3s;
  }
</style>

<script>
  import { flip } from "../../scripts/flip";

  document.addEventListener("astro:page-load", () => {
    const projectEls = document.querySelectorAll(".project");
    const projectNameEls = document.querySelectorAll(".project__name");
    const projectResponsabilities = document.querySelectorAll(
      ".project__responsabilities"
    );

    projectEls.forEach((el, i) =>
      el.addEventListener("click", () => {
        el.scrollTo({ top: 0 });
        flip(() => {
          el.classList.toggle("motion-safe:animate-pulse");
          el.classList.toggle("pt-7");
          el.classList.toggle("overflow-y-scroll");
          projectResponsabilities[i].classList.toggle("hidden");
        }, [projectNameEls[i], projectResponsabilities[i]]);
      })
    );
  });
</script>
