---
import type { Job } from "../../models/JobModels";
import type { SectionItem as SectionItemModel } from "../../models/SectionModels";
import SectionItem from "../layout/SectionItem.astro";
import ExperienceItemProjects from "./ExperienceItemProjects.astro";
import ExperienceItemTechs from "./ExperienceItemTechs.astro";
import ItemDetails from "./ItemDetails.astro";
interface Props extends SectionItemModel {
  showLink?: boolean;
  job: Job;
}

const { className, showLink, title, entityName, achievedOn, job } = Astro.props;

const hasResponsabilities =
  job.responsabilities && job.responsabilities.length > 0;
const hasProjects = job.projects && job.projects.length > 0;
const hasTechnologies = job.technologies && job.technologies.length > 0;
---

<SectionItem
  className={className}
  title={title}
  entityName={entityName}
  achievedOn={achievedOn}
>
  {
    showLink && (
      <a
        href={`/jobs/${job.id}`}
        class="flex justify-center items-center size-9 absolute top-1/2 right-0 translate-x-3 -translate-y-1/2 md:translate-x-1/2 cursor-pointer text-2xl text-white bg-sky-600 rounded-full transition-all duration-100 outline outline-2 outline-gray-300 hover:bg-sky-300 hover:outline-offset-2"
      >
        <span class="ion-eye" />
      </a>
    )
  }
  <Fragment slot="description">
    {job.description}
  </Fragment>

  {
    hasResponsabilities && (
      <div class="my-4">
        <h6 class="font-semibold text-sky-600">
          Responsabilidades del puesto:
        </h6>
        <ItemDetails details={job.responsabilities} />
      </div>
    )
  }

  {hasProjects && <ExperienceItemProjects projects={job.projects} />}

  {hasTechnologies && <ExperienceItemTechs technologies={job.technologies} />}
</SectionItem>
